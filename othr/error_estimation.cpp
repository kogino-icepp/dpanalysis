#include <iostream>
#include "../headers/fitter.h"
using namespace std;
double hosei[24][8] = {
    {1.13245,1.142,1.13562,1.1432,1.14706,1.11157,1.1375,1.15458},
    {1.13183,1.14521,1.13852,1.14507,1.12591,1.13597,1.12438,1.14009},
    {1.14608,1.12456,1.12808,1.14717,1.13378,1.14064,1.11851,1.12468},
    {1.12888,1.13746,1.14985,1.13999,1.13494,1.12805,1.13739,1.13202},
    {1.11944,1.14097,1.14338,1.14011,1.14622,1.14715,1.12934,1.13564},
    {1.14708,1.15226,1.14045,1.13297,1.1338,1.14008,1.12353,1.13136},
    {1.13668,1.12672,1.14737,1.14072,1.12925,1.12689,1.13128,1.12511},
    {1.12074,1.11436,1.14591,1.11498,1.11501,1.14038,1.12464,1.13384},
    {1.1509,1.13773,1.13295,1.14587,1.15243,1.1385,1.14089,1.13442},
    {1.14157,1.13675,1.15343,1.11896,1.12901,1.13417,1.14798,1.13203},
    {1.14526,1.13279,1.14707,1.14046,1.14375,1.14713,1.13475,1.1641},
    {1.1603,1.14312,1.1541,1.13668,1.15352,1.13539,1.14394,1.136},
    {},
    {1.15356,1.13391,1.13923,1.13294,1.14626,1.14372,1.14041,1.14722},
    {0,2.61028e-314,1.15244,1.15078,1.15253,1.15252,1.16004,1.16154},
    {1.13971,1.14376,1.15491,1.1535,1.13437,1.17363,1.16383,1.12419},
    {1.15111,1.14801,1.1397,1.1435,1.14912,1.15738,1.13241,1.13482},
    {1.15442,1.15381,1.1429,1.17753,1.15116,1.15322,1.15399,1.15426},
    {},
    {1.13979,1.17492,1.13996,1.14347,1.15231,1.14718,1.1463,1.14697},
    {},
    {},
    {},
    {}
};
void error_estimation(){
    TCanvas *c1 = new TCanvas("c1","My Canvas",10,10,700,500);
    c1 -> SetMargin(0.15,0.1,0.2,0.1);
    Setting st;
    st.dot_size = 0.8;
    st.markerstyle = 20;
    st.lcolor = kRed;
    st.color = kRed;
    //1~24までの測定に対してエラーの過小評価がどのくらいされていたのかをTGraphErrorsにプロットするだけのコード
    TGraphErrors* graph = new TGraphErrors;
    axrange ax = {214,265,0.8,1.2,0,1,";Band;#sigma"};
    rep(i,25){
        double hmean = 0;
        double hsigma = 0;
        rep(j,8)hmean += hosei[i][j];
        hmean /= 8;
        rep(j,8)hsigma += (hosei[i][j]-hmean)*(hosei[i][j]-hmean);
        hsigma = sqrt(hsigma/7);
        graph -> SetPoint(i,215+2*i,hmean);
        graph -> SetPointError(i,0,hsigma);
        cout << i << " " << hmean << endl;
    }
    st.GraphErrors(graph,ax);
    graph -> Draw("AP");
}
